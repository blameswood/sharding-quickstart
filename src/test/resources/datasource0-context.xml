<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context 
	    http://www.springframework.org/schema/context/spring-context-4.2.xsd
	    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        ">
	<!-- ds p -->
	<bean id="dataSource0_write" class="com.alibaba.druid.pool.DruidDataSource" lazy-init="true">
		<property name="defaultAutoCommit" value="false" />
		<property name="url" value="${ds1.jdbc.url}" />
		<property name="username" value="${ds1.jdbc.username}" />
		<property name="password" value="${ds1.jdbc.password}" />
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="maxActive" value="80" />
		<property name="initialSize" value="10" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="10000" />
		<property name="minIdle" value="10" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
	</bean>
	
	<bean id="dataSource0_read" class="com.alibaba.druid.pool.DruidDataSource" lazy-init="true">
		<property name="defaultAutoCommit" value="false" />
		<property name="url" value="${ds1.jdbc.url}" />
		<property name="username" value="${ds1.jdbc.username}" />
		<property name="password" value="${ds1.jdbc.password}" />
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="maxActive" value="80" />
		<property name="initialSize" value="10" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="10000" />
		<property name="minIdle" value="10" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
	</bean>
	
	<bean id="dataSourceGroup0" class="mybatis.sharding.quickstart.datasource.ReadWriteSplittingDataSourceGroup">
		<property name="dataSourceGroupId" value="0"/>
		<property name="writeDataSource" ref="dataSource0_write"/>
		<property name="readDataSource" ref="dataSource0_read"/>
	</bean>
	
	<bean id="dataSource0_SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceGroup0" />
		<property name="mapperLocations">
			<list>
				<value>classpath:mybatis_xml_mapper/*.xml</value>
			</list>
		</property>
		<property name="typeAliasesPackage" value="mybatis.sharding.quickstart.model" />
		<property name="plugins">
			<list>
				<bean class="mybatis.sharding.quickstart.plugin.StatementHandlerPrepareInterceptor" />
			</list>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="mybatis.sharding.quickstart.mapper" />
		<property name="sqlSessionFactoryBeanName" value="dataSource0_SqlSessionFactory" />
	</bean>

	<bean id="dataSource0_SqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="dataSource0_SqlSessionFactory" />
	</bean>
	<!-- enable transaction annotation support -->
	<tx:annotation-driven transaction-manager="txManager0" proxy-target-class="true"/>
	
	<!-- transaction support-->
	<bean id="txManager0" class="mybatis.sharding.quickstart.tx.ShardingDataSourceTransactionManager">
		<property name="txManagerName" value="transactionManager0"></property>
		<property name="dataSource" ref="dataSourceGroup0" />
	</bean>
	
</beans>